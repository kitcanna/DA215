
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b4  00800100  00000d3e  00000db2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d3e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000008c  00000000  00000000  00000e66  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ef4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000f38  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001960  00000000  00000000  00001068  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000fe6  00000000  00000000  000029c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b24  00000000  00000000  000039ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000214  00000000  00000000  000044d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000738  00000000  00000000  000046e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007fb  00000000  00000000  00004e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  0000561b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  68:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  6c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  70:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  74:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  7c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  80:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  84:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  88:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  8c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  90:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  94:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  98:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  9c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	11 e0       	ldi	r17, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	ee e3       	ldi	r30, 0x3E	; 62
  c0:	fd e0       	ldi	r31, 0x0D	; 13
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a4 3b       	cpi	r26, 0xB4	; 180
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>
  ce:	0e 94 f6 01 	call	0x3ec	; 0x3ec <main>
  d2:	0c 94 9d 06 	jmp	0xd3a	; 0xd3a <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <delay_s>:
  da:	8a ef       	ldi	r24, 0xFA	; 250
  dc:	1e d0       	rcall	.+60     	; 0x11a <delay_ms>
  de:	8a ef       	ldi	r24, 0xFA	; 250
  e0:	1c d0       	rcall	.+56     	; 0x11a <delay_ms>
  e2:	8a ef       	ldi	r24, 0xFA	; 250
  e4:	1a d0       	rcall	.+52     	; 0x11a <delay_ms>
  e6:	8a ef       	ldi	r24, 0xFA	; 250
  e8:	18 d0       	rcall	.+48     	; 0x11a <delay_ms>
  ea:	8a ef       	ldi	r24, 0xFA	; 250
  ec:	16 d0       	rcall	.+44     	; 0x11a <delay_ms>
  ee:	8a ef       	ldi	r24, 0xFA	; 250
  f0:	14 d0       	rcall	.+40     	; 0x11a <delay_ms>
  f2:	08 95       	ret

000000f4 <delay_ay>:
	...
  fc:	08 95       	ret

000000fe <delay_1_micros>:
	...
 10e:	08 95       	ret

00000110 <delay_micros>:
 110:	f1 df       	rcall	.-30     	; 0xf4 <delay_ay>
 112:	8a 95       	dec	r24
 114:	80 30       	cpi	r24, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <delay_micros>
 118:	08 95       	ret

0000011a <delay_ms>:
 11a:	38 2f       	mov	r19, r24

0000011c <loop_dms>:
 11c:	8a ef       	ldi	r24, 0xFA	; 250
 11e:	f8 df       	rcall	.-16     	; 0x110 <delay_micros>
 120:	8a ef       	ldi	r24, 0xFA	; 250
 122:	f6 df       	rcall	.-20     	; 0x110 <delay_micros>
 124:	8a ef       	ldi	r24, 0xFA	; 250
 126:	f4 df       	rcall	.-24     	; 0x110 <delay_micros>
 128:	8a ef       	ldi	r24, 0xFA	; 250
 12a:	f2 df       	rcall	.-28     	; 0x110 <delay_micros>
 12c:	3a 95       	dec	r19
 12e:	30 30       	cpi	r19, 0x00	; 0
 130:	a9 f7       	brne	.-22     	; 0x11c <loop_dms>
 132:	08 95       	ret

00000134 <play_guess_nr>:
 *
 * parameter:
 *	rnd_nr: random number (to be guessed)
 */
void play_guess_nr(uint16_t rnd_nr)
{
 134:	0f 93       	push	r16
 136:	1f 93       	push	r17
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	cd b7       	in	r28, 0x3d	; 61
 13e:	de b7       	in	r29, 0x3e	; 62
 140:	61 97       	sbiw	r28, 0x11	; 17
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	f8 94       	cli
 146:	de bf       	out	0x3e, r29	; 62
 148:	0f be       	out	0x3f, r0	; 63
 14a:	cd bf       	out	0x3d, r28	; 61
 14c:	8c 01       	movw	r16, r24
	uint16_t nr_of_guesses = 0;
	// show initial message, before game starts.
	output_msg("Can you guess", "the number?", 3);
 14e:	43 e0       	ldi	r20, 0x03	; 3
 150:	64 e0       	ldi	r22, 0x04	; 4
 152:	71 e0       	ldi	r23, 0x01	; 1
 154:	80 e1       	ldi	r24, 0x10	; 16
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
static uint16_t get_nr(void)
{
	uint16_t input_length;
	uint16_t guessed_nr;
	while (1) {
		input_length = input_int("Enter number:", &guessed_nr); //UPPGIFT: ändra koden så att 'input_int()' anropas, returvärdet ska lagras i 'input_length', 'guessed_nr' ska modifieras av 'input_int()'.
 15c:	be 01       	movw	r22, r28
 15e:	6f 5f       	subi	r22, 0xFF	; 255
 160:	7f 4f       	sbci	r23, 0xFF	; 255
 162:	8e e1       	ldi	r24, 0x1E	; 30
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	0e 94 36 01 	call	0x26c	; 0x26c <input_int>
		//delay_s(1);
		if (input_length > 0 && guessed_nr >= 1 && guessed_nr <= 100) {
 16a:	88 23       	and	r24, r24
 16c:	61 f0       	breq	.+24     	; 0x186 <play_guess_nr+0x52>
 16e:	89 81       	ldd	r24, Y+1	; 0x01
 170:	9a 81       	ldd	r25, Y+2	; 0x02
 172:	9c 01       	movw	r18, r24
 174:	21 50       	subi	r18, 0x01	; 1
 176:	31 09       	sbc	r19, r1
 178:	24 36       	cpi	r18, 0x64	; 100
 17a:	31 05       	cpc	r19, r1
 17c:	20 f4       	brcc	.+8      	; 0x186 <play_guess_nr+0x52>
	// let the user guess a number
	guessed_nr = get_nr();
	// keep track of number of guesses
		++p_nr_of_guesses; //UPPGIFT: öka innehållet i variabeln som 'p_nr_of_guesses' pekar på.
	// if the guessed number was the correct number...
	if (guessed_nr == rnd_nr) {
 17e:	08 17       	cp	r16, r24
 180:	19 07       	cpc	r17, r25
 182:	89 f5       	brne	.+98     	; 0x1e6 <play_guess_nr+0xb2>
 184:	08 c0       	rjmp	.+16     	; 0x196 <play_guess_nr+0x62>
		if (input_length > 0 && guessed_nr >= 1 && guessed_nr <= 100) {
			// ...return that number!
			return guessed_nr;
		} else {
			// show error/info message!
			output_msg("Enter a number", "between 1-100!", 1);
 186:	41 e0       	ldi	r20, 0x01	; 1
 188:	6c e2       	ldi	r22, 0x2C	; 44
 18a:	71 e0       	ldi	r23, 0x01	; 1
 18c:	8b e3       	ldi	r24, 0x3B	; 59
 18e:	91 e0       	ldi	r25, 0x01	; 1
 190:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
 194:	e3 cf       	rjmp	.-58     	; 0x15c <play_guess_nr+0x28>
	guessed_nr = get_nr();
	// keep track of number of guesses
		++p_nr_of_guesses; //UPPGIFT: öka innehållet i variabeln som 'p_nr_of_guesses' pekar på.
	// if the guessed number was the correct number...
	if (guessed_nr == rnd_nr) {
		output_msg("Correct number!", "", 1);
 196:	41 e0       	ldi	r20, 0x01	; 1
 198:	60 e9       	ldi	r22, 0x90	; 144
 19a:	71 e0       	ldi	r23, 0x01	; 1
 19c:	8a e4       	ldi	r24, 0x4A	; 74
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
 */
static void show_result(uint16_t nr_of_guesses)
{
	char result[17];
	// show result
	sprintf(result, "Guesses: %u", nr_of_guesses);
 1a4:	1f 92       	push	r1
 1a6:	1f 92       	push	r1
 1a8:	8a e5       	ldi	r24, 0x5A	; 90
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	9f 93       	push	r25
 1ae:	8f 93       	push	r24
 1b0:	8e 01       	movw	r16, r28
 1b2:	0f 5f       	subi	r16, 0xFF	; 255
 1b4:	1f 4f       	sbci	r17, 0xFF	; 255
 1b6:	1f 93       	push	r17
 1b8:	0f 93       	push	r16
 1ba:	0e 94 91 03 	call	0x722	; 0x722 <sprintf>
	output_msg(result, "", 3);
 1be:	43 e0       	ldi	r20, 0x03	; 3
 1c0:	60 e9       	ldi	r22, 0x90	; 144
 1c2:	71 e0       	ldi	r23, 0x01	; 1
 1c4:	c8 01       	movw	r24, r16
 1c6:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
	if (nr_of_guesses <= 7) {
		output_msg("Good job!", "", 3);
 1ca:	43 e0       	ldi	r20, 0x03	; 3
 1cc:	60 e9       	ldi	r22, 0x90	; 144
 1ce:	71 e0       	ldi	r23, 0x01	; 1
 1d0:	86 e6       	ldi	r24, 0x66	; 102
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
	output_msg("Can you guess", "the number?", 3);
	// play game until the correct number is guessed!
	while (playing_game(rnd_nr, &nr_of_guesses));
	// show result!
	show_result(nr_of_guesses);
 1d8:	0f 90       	pop	r0
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	13 c0       	rjmp	.+38     	; 0x20c <play_guess_nr+0xd8>
		++p_nr_of_guesses; //UPPGIFT: öka innehållet i variabeln som 'p_nr_of_guesses' pekar på.
	// if the guessed number was the correct number...
	if (guessed_nr == rnd_nr) {
		output_msg("Correct number!", "", 1);
		return 0;	// return 0 for "game over!"
	} else if (guessed_nr < rnd_nr) { // number too low?
 1e6:	80 17       	cp	r24, r16
 1e8:	91 07       	cpc	r25, r17
 1ea:	40 f4       	brcc	.+16     	; 0x1fc <play_guess_nr+0xc8>
		output_msg("Too low!", "", 1);
 1ec:	41 e0       	ldi	r20, 0x01	; 1
 1ee:	60 e9       	ldi	r22, 0x90	; 144
 1f0:	71 e0       	ldi	r23, 0x01	; 1
 1f2:	80 e7       	ldi	r24, 0x70	; 112
 1f4:	91 e0       	ldi	r25, 0x01	; 1
 1f6:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
 1fa:	b0 cf       	rjmp	.-160    	; 0x15c <play_guess_nr+0x28>
	} else { // number too high?
		output_msg("Too high!", "", 1);
 1fc:	41 e0       	ldi	r20, 0x01	; 1
 1fe:	60 e9       	ldi	r22, 0x90	; 144
 200:	71 e0       	ldi	r23, 0x01	; 1
 202:	89 e7       	ldi	r24, 0x79	; 121
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
 20a:	a8 cf       	rjmp	.-176    	; 0x15c <play_guess_nr+0x28>
	output_msg("Can you guess", "the number?", 3);
	// play game until the correct number is guessed!
	while (playing_game(rnd_nr, &nr_of_guesses));
	// show result!
	show_result(nr_of_guesses);
 20c:	61 96       	adiw	r28, 0x11	; 17
 20e:	0f b6       	in	r0, 0x3f	; 63
 210:	f8 94       	cli
 212:	de bf       	out	0x3e, r29	; 62
 214:	0f be       	out	0x3f, r0	; 63
 216:	cd bf       	out	0x3d, r28	; 61
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	1f 91       	pop	r17
 21e:	0f 91       	pop	r16
 220:	08 95       	ret

00000222 <hmi_init>:
 222:	0e 94 cc 01 	call	0x398	; 0x398 <numkey_init>
 226:	0e 94 35 02 	call	0x46a	; 0x46a <lcd_init>
 22a:	08 95       	ret

0000022c <output_msg>:
 22c:	ef 92       	push	r14
 22e:	ff 92       	push	r15
 230:	0f 93       	push	r16
 232:	1f 93       	push	r17
 234:	cf 93       	push	r28
 236:	7c 01       	movw	r14, r24
 238:	8b 01       	movw	r16, r22
 23a:	c4 2f       	mov	r28, r20
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	0e 94 2f 02 	call	0x45e	; 0x45e <lcd_set_cursor_mode>
 242:	0e 94 27 02 	call	0x44e	; 0x44e <lcd_clear>
 246:	c7 01       	movw	r24, r14
 248:	0e 94 6d 02 	call	0x4da	; 0x4da <lcd_write_str>
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	0e 94 63 02 	call	0x4c6	; 0x4c6 <lcd_set_cursor_pos>
 254:	c8 01       	movw	r24, r16
 256:	0e 94 6d 02 	call	0x4da	; 0x4da <lcd_write_str>
 25a:	8c 2f       	mov	r24, r28
 25c:	0e 94 6d 00 	call	0xda	; 0xda <delay_s>
 260:	cf 91       	pop	r28
 262:	1f 91       	pop	r17
 264:	0f 91       	pop	r16
 266:	ff 90       	pop	r15
 268:	ef 90       	pop	r14
 26a:	08 95       	ret

0000026c <input_int>:
 26c:	cf 92       	push	r12
 26e:	df 92       	push	r13
 270:	ef 92       	push	r14
 272:	ff 92       	push	r15
 274:	0f 93       	push	r16
 276:	1f 93       	push	r17
 278:	cf 93       	push	r28
 27a:	df 93       	push	r29
 27c:	00 d0       	rcall	.+0      	; 0x27e <input_int+0x12>
 27e:	00 d0       	rcall	.+0      	; 0x280 <input_int+0x14>
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	8c 01       	movw	r16, r24
 286:	7b 01       	movw	r14, r22
 288:	0e 94 27 02 	call	0x44e	; 0x44e <lcd_clear>
 28c:	c8 01       	movw	r24, r16
 28e:	0e 94 6d 02 	call	0x4da	; 0x4da <lcd_write_str>
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	0e 94 2f 02 	call	0x45e	; 0x45e <lcd_set_cursor_mode>
 298:	60 e0       	ldi	r22, 0x00	; 0
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	0e 94 63 02 	call	0x4c6	; 0x4c6 <lcd_set_cursor_pos>
 2a0:	00 e0       	ldi	r16, 0x00	; 0
 2a2:	0f 2e       	mov	r0, r31
 2a4:	ff e8       	ldi	r31, 0x8F	; 143
 2a6:	cf 2e       	mov	r12, r31
 2a8:	f1 e0       	ldi	r31, 0x01	; 1
 2aa:	df 2e       	mov	r13, r31
 2ac:	f0 2d       	mov	r31, r0
 2ae:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <numkey_read>
 2b2:	18 2f       	mov	r17, r24
 2b4:	88 23       	and	r24, r24
 2b6:	d9 f3       	breq	.-10     	; 0x2ae <input_int+0x42>
 2b8:	83 32       	cpi	r24, 0x23	; 35
 2ba:	79 f4       	brne	.+30     	; 0x2da <input_int+0x6e>
 2bc:	41 e0       	ldi	r20, 0x01	; 1
 2be:	60 e9       	ldi	r22, 0x90	; 144
 2c0:	71 e0       	ldi	r23, 0x01	; 1
 2c2:	83 e8       	ldi	r24, 0x83	; 131
 2c4:	91 e0       	ldi	r25, 0x01	; 1
 2c6:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
 2ca:	fe 01       	movw	r30, r28
 2cc:	e0 0f       	add	r30, r16
 2ce:	f1 1d       	adc	r31, r1
 2d0:	11 82       	std	Z+1, r1	; 0x01
 2d2:	00 23       	and	r16, r16
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <input_int+0x6c>
 2d6:	52 c0       	rjmp	.+164    	; 0x37c <input_int+0x110>
 2d8:	25 c0       	rjmp	.+74     	; 0x324 <input_int+0xb8>
 2da:	8a 32       	cpi	r24, 0x2A	; 42
 2dc:	81 f4       	brne	.+32     	; 0x2fe <input_int+0x92>
 2de:	00 23       	and	r16, r16
 2e0:	e1 f0       	breq	.+56     	; 0x31a <input_int+0xae>
 2e2:	01 50       	subi	r16, 0x01	; 1
 2e4:	60 e1       	ldi	r22, 0x10	; 16
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 2ec:	6c 2d       	mov	r22, r12
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 2f4:	60 e1       	ldi	r22, 0x10	; 16
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 2fc:	0e c0       	rjmp	.+28     	; 0x31a <input_int+0xae>
 2fe:	03 30       	cpi	r16, 0x03	; 3
 300:	60 f4       	brcc	.+24     	; 0x31a <input_int+0xae>
 302:	68 2f       	mov	r22, r24
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 30a:	e1 e0       	ldi	r30, 0x01	; 1
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	ec 0f       	add	r30, r28
 310:	fd 1f       	adc	r31, r29
 312:	e0 0f       	add	r30, r16
 314:	f1 1d       	adc	r31, r1
 316:	10 83       	st	Z, r17
 318:	0f 5f       	subi	r16, 0xFF	; 255
 31a:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <numkey_read>
 31e:	81 11       	cpse	r24, r1
 320:	fc cf       	rjmp	.-8      	; 0x31a <input_int+0xae>
 322:	c5 cf       	rjmp	.-118    	; 0x2ae <input_int+0x42>
 324:	2f ef       	ldi	r18, 0xFF	; 255
 326:	20 0f       	add	r18, r16
 328:	fe 01       	movw	r30, r28
 32a:	e2 0f       	add	r30, r18
 32c:	f1 1d       	adc	r31, r1
 32e:	41 81       	ldd	r20, Z+1	; 0x01
 330:	40 53       	subi	r20, 0x30	; 48
 332:	50 e0       	ldi	r21, 0x00	; 0
 334:	22 23       	and	r18, r18
 336:	f9 f0       	breq	.+62     	; 0x376 <input_int+0x10a>
 338:	8a e0       	ldi	r24, 0x0A	; 10
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	21 50       	subi	r18, 0x01	; 1
 33e:	e1 e0       	ldi	r30, 0x01	; 1
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	ec 0f       	add	r30, r28
 344:	fd 1f       	adc	r31, r29
 346:	e2 0f       	add	r30, r18
 348:	f1 1d       	adc	r31, r1
 34a:	30 81       	ld	r19, Z
 34c:	30 53       	subi	r19, 0x30	; 48
 34e:	38 9f       	mul	r19, r24
 350:	b0 01       	movw	r22, r0
 352:	39 9f       	mul	r19, r25
 354:	70 0d       	add	r23, r0
 356:	11 24       	eor	r1, r1
 358:	46 0f       	add	r20, r22
 35a:	57 1f       	adc	r21, r23
 35c:	bc 01       	movw	r22, r24
 35e:	66 0f       	add	r22, r22
 360:	77 1f       	adc	r23, r23
 362:	88 0f       	add	r24, r24
 364:	99 1f       	adc	r25, r25
 366:	88 0f       	add	r24, r24
 368:	99 1f       	adc	r25, r25
 36a:	88 0f       	add	r24, r24
 36c:	99 1f       	adc	r25, r25
 36e:	86 0f       	add	r24, r22
 370:	97 1f       	adc	r25, r23
 372:	21 11       	cpse	r18, r1
 374:	e3 cf       	rjmp	.-58     	; 0x33c <input_int+0xd0>
 376:	f7 01       	movw	r30, r14
 378:	51 83       	std	Z+1, r21	; 0x01
 37a:	40 83       	st	Z, r20
 37c:	80 2f       	mov	r24, r16
 37e:	0f 90       	pop	r0
 380:	0f 90       	pop	r0
 382:	0f 90       	pop	r0
 384:	0f 90       	pop	r0
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	1f 91       	pop	r17
 38c:	0f 91       	pop	r16
 38e:	ff 90       	pop	r15
 390:	ef 90       	pop	r14
 392:	df 90       	pop	r13
 394:	cf 90       	pop	r12
 396:	08 95       	ret

00000398 <numkey_init>:
 398:	1d b8       	out	0x0d, r1	; 13
 39a:	80 ef       	ldi	r24, 0xF0	; 240
 39c:	84 b9       	out	0x04, r24	; 4
 39e:	08 95       	ret

000003a0 <numkey_read>:
 3a0:	0f 93       	push	r16
 3a2:	1f 93       	push	r17
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	c0 e0       	ldi	r28, 0x00	; 0
 3aa:	d0 e0       	ldi	r29, 0x00	; 0
 3ac:	85 b1       	in	r24, 0x05	; 5
 3ae:	28 2f       	mov	r18, r24
 3b0:	2f 70       	andi	r18, 0x0F	; 15
 3b2:	ce 01       	movw	r24, r28
 3b4:	82 95       	swap	r24
 3b6:	92 95       	swap	r25
 3b8:	90 7f       	andi	r25, 0xF0	; 240
 3ba:	98 27       	eor	r25, r24
 3bc:	80 7f       	andi	r24, 0xF0	; 240
 3be:	98 27       	eor	r25, r24
 3c0:	82 2b       	or	r24, r18
 3c2:	85 b9       	out	0x05, r24	; 5
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	0e 94 8d 00 	call	0x11a	; 0x11a <delay_ms>
 3ca:	66 9b       	sbis	0x0c, 6	; 12
 3cc:	05 c0       	rjmp	.+10     	; 0x3d8 <numkey_read+0x38>
 3ce:	fe 01       	movw	r30, r28
 3d0:	ef 56       	subi	r30, 0x6F	; 111
 3d2:	fe 4f       	sbci	r31, 0xFE	; 254
 3d4:	80 81       	ld	r24, Z
 3d6:	05 c0       	rjmp	.+10     	; 0x3e2 <numkey_read+0x42>
 3d8:	21 96       	adiw	r28, 0x01	; 1
 3da:	cc 30       	cpi	r28, 0x0C	; 12
 3dc:	d1 05       	cpc	r29, r1
 3de:	31 f7       	brne	.-52     	; 0x3ac <numkey_read+0xc>
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	df 91       	pop	r29
 3e4:	cf 91       	pop	r28
 3e6:	1f 91       	pop	r17
 3e8:	0f 91       	pop	r16
 3ea:	08 95       	ret

000003ec <main>:
 3ec:	0e 94 11 01 	call	0x222	; 0x222 <hmi_init>
 3f0:	0e 94 7e 02 	call	0x4fc	; 0x4fc <random_seed>
 3f4:	43 e0       	ldi	r20, 0x03	; 3
 3f6:	6d e9       	ldi	r22, 0x9D	; 157
 3f8:	71 e0       	ldi	r23, 0x01	; 1
 3fa:	8b ea       	ldi	r24, 0xAB	; 171
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	0e 94 16 01 	call	0x22c	; 0x22c <output_msg>
 402:	84 e6       	ldi	r24, 0x64	; 100
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	0e 94 9b 02 	call	0x536	; 0x536 <random_get_nr>
 40a:	01 96       	adiw	r24, 0x01	; 1
 40c:	0e 94 9a 00 	call	0x134	; 0x134 <play_guess_nr>
 410:	f8 cf       	rjmp	.-16     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>

00000412 <write_4bit_msb>:
 412:	91 b3       	in	r25, 0x11	; 17
 414:	9f 70       	andi	r25, 0x0F	; 15
 416:	80 7f       	andi	r24, 0xF0	; 240
 418:	89 2b       	or	r24, r25
 41a:	81 bb       	out	0x11, r24	; 17
 41c:	5f 9a       	sbi	0x0b, 7	; 11
 41e:	0e 94 7f 00 	call	0xfe	; 0xfe <delay_1_micros>
 422:	5f 98       	cbi	0x0b, 7	; 11
 424:	08 95       	ret

00000426 <lcd_write>:
 426:	cf 93       	push	r28
 428:	c6 2f       	mov	r28, r22
 42a:	81 11       	cpse	r24, r1
 42c:	02 c0       	rjmp	.+4      	; 0x432 <lcd_write+0xc>
 42e:	5e 98       	cbi	0x0b, 6	; 11
 430:	01 c0       	rjmp	.+2      	; 0x434 <lcd_write+0xe>
 432:	5e 9a       	sbi	0x0b, 6	; 11
 434:	8c 2f       	mov	r24, r28
 436:	0e 94 09 02 	call	0x412	; 0x412 <write_4bit_msb>
 43a:	8c 2f       	mov	r24, r28
 43c:	82 95       	swap	r24
 43e:	80 7f       	andi	r24, 0xF0	; 240
 440:	0e 94 09 02 	call	0x412	; 0x412 <write_4bit_msb>
 444:	8d e2       	ldi	r24, 0x2D	; 45
 446:	0e 94 88 00 	call	0x110	; 0x110 <delay_micros>
 44a:	cf 91       	pop	r28
 44c:	08 95       	ret

0000044e <lcd_clear>:
 44e:	61 e0       	ldi	r22, 0x01	; 1
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 456:	82 e0       	ldi	r24, 0x02	; 2
 458:	0e 94 8d 00 	call	0x11a	; 0x11a <delay_ms>
 45c:	08 95       	ret

0000045e <lcd_set_cursor_mode>:
 45e:	68 2f       	mov	r22, r24
 460:	6c 60       	ori	r22, 0x0C	; 12
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 468:	08 95       	ret

0000046a <lcd_init>:
 46a:	80 ef       	ldi	r24, 0xF0	; 240
 46c:	80 bb       	out	0x10, r24	; 16
 46e:	80 ec       	ldi	r24, 0xC0	; 192
 470:	8a b9       	out	0x0a, r24	; 10
 472:	84 e1       	ldi	r24, 0x14	; 20
 474:	0e 94 8d 00 	call	0x11a	; 0x11a <delay_ms>
 478:	5e 98       	cbi	0x0b, 6	; 11
 47a:	80 e3       	ldi	r24, 0x30	; 48
 47c:	0e 94 09 02 	call	0x412	; 0x412 <write_4bit_msb>
 480:	8a e0       	ldi	r24, 0x0A	; 10
 482:	0e 94 8d 00 	call	0x11a	; 0x11a <delay_ms>
 486:	80 e3       	ldi	r24, 0x30	; 48
 488:	0e 94 09 02 	call	0x412	; 0x412 <write_4bit_msb>
 48c:	8a e0       	ldi	r24, 0x0A	; 10
 48e:	0e 94 8d 00 	call	0x11a	; 0x11a <delay_ms>
 492:	80 e3       	ldi	r24, 0x30	; 48
 494:	0e 94 09 02 	call	0x412	; 0x412 <write_4bit_msb>
 498:	8a e0       	ldi	r24, 0x0A	; 10
 49a:	0e 94 8d 00 	call	0x11a	; 0x11a <delay_ms>
 49e:	80 e2       	ldi	r24, 0x20	; 32
 4a0:	0e 94 09 02 	call	0x412	; 0x412 <write_4bit_msb>
 4a4:	8d e2       	ldi	r24, 0x2D	; 45
 4a6:	0e 94 88 00 	call	0x110	; 0x110 <delay_micros>
 4aa:	68 e2       	ldi	r22, 0x28	; 40
 4ac:	80 e0       	ldi	r24, 0x00	; 0
 4ae:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 4b2:	80 e0       	ldi	r24, 0x00	; 0
 4b4:	0e 94 2f 02 	call	0x45e	; 0x45e <lcd_set_cursor_mode>
 4b8:	0e 94 27 02 	call	0x44e	; 0x44e <lcd_clear>
 4bc:	66 e0       	ldi	r22, 0x06	; 6
 4be:	80 e0       	ldi	r24, 0x00	; 0
 4c0:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 4c4:	08 95       	ret

000004c6 <lcd_set_cursor_pos>:
 4c6:	20 e4       	ldi	r18, 0x40	; 64
 4c8:	82 9f       	mul	r24, r18
 4ca:	c0 01       	movw	r24, r0
 4cc:	11 24       	eor	r1, r1
 4ce:	60 68       	ori	r22, 0x80	; 128
 4d0:	68 2b       	or	r22, r24
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 4d8:	08 95       	ret

000004da <lcd_write_str>:
 4da:	cf 93       	push	r28
 4dc:	df 93       	push	r29
 4de:	fc 01       	movw	r30, r24
 4e0:	60 81       	ld	r22, Z
 4e2:	66 23       	and	r22, r22
 4e4:	41 f0       	breq	.+16     	; 0x4f6 <lcd_write_str+0x1c>
 4e6:	ec 01       	movw	r28, r24
 4e8:	21 96       	adiw	r28, 0x01	; 1
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	0e 94 13 02 	call	0x426	; 0x426 <lcd_write>
 4f0:	69 91       	ld	r22, Y+
 4f2:	61 11       	cpse	r22, r1
 4f4:	fa cf       	rjmp	.-12     	; 0x4ea <lcd_write_str+0x10>
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	08 95       	ret

000004fc <random_seed>:
 4fc:	80 e4       	ldi	r24, 0x40	; 64
 4fe:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
 502:	ea e7       	ldi	r30, 0x7A	; 122
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	87 e0       	ldi	r24, 0x07	; 7
 508:	80 83       	st	Z, r24
 50a:	80 e8       	ldi	r24, 0x80	; 128
 50c:	80 83       	st	Z, r24
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__DATA_REGION_ORIGIN__+0x1e>
 514:	80 81       	ld	r24, Z
 516:	80 64       	ori	r24, 0x40	; 64
 518:	80 83       	st	Z, r24
 51a:	80 81       	ld	r24, Z
 51c:	84 ff       	sbrs	r24, 4
 51e:	fd cf       	rjmp	.-6      	; 0x51a <random_seed+0x1e>
 520:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 524:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	78 2b       	or	r23, r24
 52c:	80 e0       	ldi	r24, 0x00	; 0
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0e 94 88 03 	call	0x710	; 0x710 <srandom>
 534:	08 95       	ret

00000536 <random_get_nr>:
 536:	cf 93       	push	r28
 538:	df 93       	push	r29
 53a:	00 97       	sbiw	r24, 0x00	; 0
 53c:	51 f0       	breq	.+20     	; 0x552 <random_get_nr+0x1c>
 53e:	ec 01       	movw	r28, r24
 540:	0e 94 3a 03 	call	0x674	; 0x674 <random>
 544:	9e 01       	movw	r18, r28
 546:	40 e0       	ldi	r20, 0x00	; 0
 548:	50 e0       	ldi	r21, 0x00	; 0
 54a:	0e 94 ae 02 	call	0x55c	; 0x55c <__divmodsi4>
 54e:	cb 01       	movw	r24, r22
 550:	02 c0       	rjmp	.+4      	; 0x556 <random_get_nr+0x20>
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	df 91       	pop	r29
 558:	cf 91       	pop	r28
 55a:	08 95       	ret

0000055c <__divmodsi4>:
 55c:	05 2e       	mov	r0, r21
 55e:	97 fb       	bst	r25, 7
 560:	1e f4       	brtc	.+6      	; 0x568 <__divmodsi4+0xc>
 562:	00 94       	com	r0
 564:	0e 94 c5 02 	call	0x58a	; 0x58a <__negsi2>
 568:	57 fd       	sbrc	r21, 7
 56a:	07 d0       	rcall	.+14     	; 0x57a <__divmodsi4_neg2>
 56c:	0e 94 cd 02 	call	0x59a	; 0x59a <__udivmodsi4>
 570:	07 fc       	sbrc	r0, 7
 572:	03 d0       	rcall	.+6      	; 0x57a <__divmodsi4_neg2>
 574:	4e f4       	brtc	.+18     	; 0x588 <__divmodsi4_exit>
 576:	0c 94 c5 02 	jmp	0x58a	; 0x58a <__negsi2>

0000057a <__divmodsi4_neg2>:
 57a:	50 95       	com	r21
 57c:	40 95       	com	r20
 57e:	30 95       	com	r19
 580:	21 95       	neg	r18
 582:	3f 4f       	sbci	r19, 0xFF	; 255
 584:	4f 4f       	sbci	r20, 0xFF	; 255
 586:	5f 4f       	sbci	r21, 0xFF	; 255

00000588 <__divmodsi4_exit>:
 588:	08 95       	ret

0000058a <__negsi2>:
 58a:	90 95       	com	r25
 58c:	80 95       	com	r24
 58e:	70 95       	com	r23
 590:	61 95       	neg	r22
 592:	7f 4f       	sbci	r23, 0xFF	; 255
 594:	8f 4f       	sbci	r24, 0xFF	; 255
 596:	9f 4f       	sbci	r25, 0xFF	; 255
 598:	08 95       	ret

0000059a <__udivmodsi4>:
 59a:	a1 e2       	ldi	r26, 0x21	; 33
 59c:	1a 2e       	mov	r1, r26
 59e:	aa 1b       	sub	r26, r26
 5a0:	bb 1b       	sub	r27, r27
 5a2:	fd 01       	movw	r30, r26
 5a4:	0d c0       	rjmp	.+26     	; 0x5c0 <__udivmodsi4_ep>

000005a6 <__udivmodsi4_loop>:
 5a6:	aa 1f       	adc	r26, r26
 5a8:	bb 1f       	adc	r27, r27
 5aa:	ee 1f       	adc	r30, r30
 5ac:	ff 1f       	adc	r31, r31
 5ae:	a2 17       	cp	r26, r18
 5b0:	b3 07       	cpc	r27, r19
 5b2:	e4 07       	cpc	r30, r20
 5b4:	f5 07       	cpc	r31, r21
 5b6:	20 f0       	brcs	.+8      	; 0x5c0 <__udivmodsi4_ep>
 5b8:	a2 1b       	sub	r26, r18
 5ba:	b3 0b       	sbc	r27, r19
 5bc:	e4 0b       	sbc	r30, r20
 5be:	f5 0b       	sbc	r31, r21

000005c0 <__udivmodsi4_ep>:
 5c0:	66 1f       	adc	r22, r22
 5c2:	77 1f       	adc	r23, r23
 5c4:	88 1f       	adc	r24, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	1a 94       	dec	r1
 5ca:	69 f7       	brne	.-38     	; 0x5a6 <__udivmodsi4_loop>
 5cc:	60 95       	com	r22
 5ce:	70 95       	com	r23
 5d0:	80 95       	com	r24
 5d2:	90 95       	com	r25
 5d4:	9b 01       	movw	r18, r22
 5d6:	ac 01       	movw	r20, r24
 5d8:	bd 01       	movw	r22, r26
 5da:	cf 01       	movw	r24, r30
 5dc:	08 95       	ret

000005de <random_r>:
 5de:	8f 92       	push	r8
 5e0:	9f 92       	push	r9
 5e2:	af 92       	push	r10
 5e4:	bf 92       	push	r11
 5e6:	cf 92       	push	r12
 5e8:	df 92       	push	r13
 5ea:	ef 92       	push	r14
 5ec:	ff 92       	push	r15
 5ee:	cf 93       	push	r28
 5f0:	df 93       	push	r29
 5f2:	ec 01       	movw	r28, r24
 5f4:	68 81       	ld	r22, Y
 5f6:	79 81       	ldd	r23, Y+1	; 0x01
 5f8:	8a 81       	ldd	r24, Y+2	; 0x02
 5fa:	9b 81       	ldd	r25, Y+3	; 0x03
 5fc:	61 15       	cp	r22, r1
 5fe:	71 05       	cpc	r23, r1
 600:	81 05       	cpc	r24, r1
 602:	91 05       	cpc	r25, r1
 604:	21 f4       	brne	.+8      	; 0x60e <random_r+0x30>
 606:	64 e2       	ldi	r22, 0x24	; 36
 608:	79 ed       	ldi	r23, 0xD9	; 217
 60a:	8b e5       	ldi	r24, 0x5B	; 91
 60c:	97 e0       	ldi	r25, 0x07	; 7
 60e:	2d e1       	ldi	r18, 0x1D	; 29
 610:	33 ef       	ldi	r19, 0xF3	; 243
 612:	41 e0       	ldi	r20, 0x01	; 1
 614:	50 e0       	ldi	r21, 0x00	; 0
 616:	0e 94 ae 02 	call	0x55c	; 0x55c <__divmodsi4>
 61a:	49 01       	movw	r8, r18
 61c:	5a 01       	movw	r10, r20
 61e:	9b 01       	movw	r18, r22
 620:	ac 01       	movw	r20, r24
 622:	a7 ea       	ldi	r26, 0xA7	; 167
 624:	b1 e4       	ldi	r27, 0x41	; 65
 626:	0e 94 44 06 	call	0xc88	; 0xc88 <__muluhisi3>
 62a:	6b 01       	movw	r12, r22
 62c:	7c 01       	movw	r14, r24
 62e:	ac ee       	ldi	r26, 0xEC	; 236
 630:	b4 ef       	ldi	r27, 0xF4	; 244
 632:	a5 01       	movw	r20, r10
 634:	94 01       	movw	r18, r8
 636:	0e 94 52 06 	call	0xca4	; 0xca4 <__mulohisi3>
 63a:	dc 01       	movw	r26, r24
 63c:	cb 01       	movw	r24, r22
 63e:	8c 0d       	add	r24, r12
 640:	9d 1d       	adc	r25, r13
 642:	ae 1d       	adc	r26, r14
 644:	bf 1d       	adc	r27, r15
 646:	b7 ff       	sbrs	r27, 7
 648:	03 c0       	rjmp	.+6      	; 0x650 <random_r+0x72>
 64a:	01 97       	sbiw	r24, 0x01	; 1
 64c:	a1 09       	sbc	r26, r1
 64e:	b0 48       	sbci	r27, 0x80	; 128
 650:	88 83       	st	Y, r24
 652:	99 83       	std	Y+1, r25	; 0x01
 654:	aa 83       	std	Y+2, r26	; 0x02
 656:	bb 83       	std	Y+3, r27	; 0x03
 658:	bc 01       	movw	r22, r24
 65a:	cd 01       	movw	r24, r26
 65c:	9f 77       	andi	r25, 0x7F	; 127
 65e:	df 91       	pop	r29
 660:	cf 91       	pop	r28
 662:	ff 90       	pop	r15
 664:	ef 90       	pop	r14
 666:	df 90       	pop	r13
 668:	cf 90       	pop	r12
 66a:	bf 90       	pop	r11
 66c:	af 90       	pop	r10
 66e:	9f 90       	pop	r9
 670:	8f 90       	pop	r8
 672:	08 95       	ret

00000674 <random>:
 674:	8f 92       	push	r8
 676:	9f 92       	push	r9
 678:	af 92       	push	r10
 67a:	bf 92       	push	r11
 67c:	cf 92       	push	r12
 67e:	df 92       	push	r13
 680:	ef 92       	push	r14
 682:	ff 92       	push	r15
 684:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
 688:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
 68c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
 690:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
 694:	61 15       	cp	r22, r1
 696:	71 05       	cpc	r23, r1
 698:	81 05       	cpc	r24, r1
 69a:	91 05       	cpc	r25, r1
 69c:	21 f4       	brne	.+8      	; 0x6a6 <random+0x32>
 69e:	64 e2       	ldi	r22, 0x24	; 36
 6a0:	79 ed       	ldi	r23, 0xD9	; 217
 6a2:	8b e5       	ldi	r24, 0x5B	; 91
 6a4:	97 e0       	ldi	r25, 0x07	; 7
 6a6:	2d e1       	ldi	r18, 0x1D	; 29
 6a8:	33 ef       	ldi	r19, 0xF3	; 243
 6aa:	41 e0       	ldi	r20, 0x01	; 1
 6ac:	50 e0       	ldi	r21, 0x00	; 0
 6ae:	0e 94 ae 02 	call	0x55c	; 0x55c <__divmodsi4>
 6b2:	49 01       	movw	r8, r18
 6b4:	5a 01       	movw	r10, r20
 6b6:	9b 01       	movw	r18, r22
 6b8:	ac 01       	movw	r20, r24
 6ba:	a7 ea       	ldi	r26, 0xA7	; 167
 6bc:	b1 e4       	ldi	r27, 0x41	; 65
 6be:	0e 94 44 06 	call	0xc88	; 0xc88 <__muluhisi3>
 6c2:	6b 01       	movw	r12, r22
 6c4:	7c 01       	movw	r14, r24
 6c6:	ac ee       	ldi	r26, 0xEC	; 236
 6c8:	b4 ef       	ldi	r27, 0xF4	; 244
 6ca:	a5 01       	movw	r20, r10
 6cc:	94 01       	movw	r18, r8
 6ce:	0e 94 52 06 	call	0xca4	; 0xca4 <__mulohisi3>
 6d2:	dc 01       	movw	r26, r24
 6d4:	cb 01       	movw	r24, r22
 6d6:	8c 0d       	add	r24, r12
 6d8:	9d 1d       	adc	r25, r13
 6da:	ae 1d       	adc	r26, r14
 6dc:	bf 1d       	adc	r27, r15
 6de:	b7 ff       	sbrs	r27, 7
 6e0:	03 c0       	rjmp	.+6      	; 0x6e8 <random+0x74>
 6e2:	01 97       	sbiw	r24, 0x01	; 1
 6e4:	a1 09       	sbc	r26, r1
 6e6:	b0 48       	sbci	r27, 0x80	; 128
 6e8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 6ec:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 6f0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 6f4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 6f8:	bc 01       	movw	r22, r24
 6fa:	cd 01       	movw	r24, r26
 6fc:	9f 77       	andi	r25, 0x7F	; 127
 6fe:	ff 90       	pop	r15
 700:	ef 90       	pop	r14
 702:	df 90       	pop	r13
 704:	cf 90       	pop	r12
 706:	bf 90       	pop	r11
 708:	af 90       	pop	r10
 70a:	9f 90       	pop	r9
 70c:	8f 90       	pop	r8
 70e:	08 95       	ret

00000710 <srandom>:
 710:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 714:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 718:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 71c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 720:	08 95       	ret

00000722 <sprintf>:
 722:	ae e0       	ldi	r26, 0x0E	; 14
 724:	b0 e0       	ldi	r27, 0x00	; 0
 726:	e7 e9       	ldi	r30, 0x97	; 151
 728:	f3 e0       	ldi	r31, 0x03	; 3
 72a:	0c 94 65 06 	jmp	0xcca	; 0xcca <__prologue_saves__+0x1c>
 72e:	0d 89       	ldd	r16, Y+21	; 0x15
 730:	1e 89       	ldd	r17, Y+22	; 0x16
 732:	86 e0       	ldi	r24, 0x06	; 6
 734:	8c 83       	std	Y+4, r24	; 0x04
 736:	1a 83       	std	Y+2, r17	; 0x02
 738:	09 83       	std	Y+1, r16	; 0x01
 73a:	8f ef       	ldi	r24, 0xFF	; 255
 73c:	9f e7       	ldi	r25, 0x7F	; 127
 73e:	9e 83       	std	Y+6, r25	; 0x06
 740:	8d 83       	std	Y+5, r24	; 0x05
 742:	ae 01       	movw	r20, r28
 744:	47 5e       	subi	r20, 0xE7	; 231
 746:	5f 4f       	sbci	r21, 0xFF	; 255
 748:	6f 89       	ldd	r22, Y+23	; 0x17
 74a:	78 8d       	ldd	r23, Y+24	; 0x18
 74c:	ce 01       	movw	r24, r28
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	0e 94 b3 03 	call	0x766	; 0x766 <vfprintf>
 754:	ef 81       	ldd	r30, Y+7	; 0x07
 756:	f8 85       	ldd	r31, Y+8	; 0x08
 758:	e0 0f       	add	r30, r16
 75a:	f1 1f       	adc	r31, r17
 75c:	10 82       	st	Z, r1
 75e:	2e 96       	adiw	r28, 0x0e	; 14
 760:	e4 e0       	ldi	r30, 0x04	; 4
 762:	0c 94 81 06 	jmp	0xd02	; 0xd02 <__epilogue_restores__+0x1c>

00000766 <vfprintf>:
 766:	ab e0       	ldi	r26, 0x0B	; 11
 768:	b0 e0       	ldi	r27, 0x00	; 0
 76a:	e9 eb       	ldi	r30, 0xB9	; 185
 76c:	f3 e0       	ldi	r31, 0x03	; 3
 76e:	0c 94 57 06 	jmp	0xcae	; 0xcae <__prologue_saves__>
 772:	6c 01       	movw	r12, r24
 774:	7b 01       	movw	r14, r22
 776:	8a 01       	movw	r16, r20
 778:	fc 01       	movw	r30, r24
 77a:	17 82       	std	Z+7, r1	; 0x07
 77c:	16 82       	std	Z+6, r1	; 0x06
 77e:	83 81       	ldd	r24, Z+3	; 0x03
 780:	81 ff       	sbrs	r24, 1
 782:	cc c1       	rjmp	.+920    	; 0xb1c <__stack+0x1d>
 784:	ce 01       	movw	r24, r28
 786:	01 96       	adiw	r24, 0x01	; 1
 788:	3c 01       	movw	r6, r24
 78a:	f6 01       	movw	r30, r12
 78c:	93 81       	ldd	r25, Z+3	; 0x03
 78e:	f7 01       	movw	r30, r14
 790:	93 fd       	sbrc	r25, 3
 792:	85 91       	lpm	r24, Z+
 794:	93 ff       	sbrs	r25, 3
 796:	81 91       	ld	r24, Z+
 798:	7f 01       	movw	r14, r30
 79a:	88 23       	and	r24, r24
 79c:	09 f4       	brne	.+2      	; 0x7a0 <vfprintf+0x3a>
 79e:	ba c1       	rjmp	.+884    	; 0xb14 <__stack+0x15>
 7a0:	85 32       	cpi	r24, 0x25	; 37
 7a2:	39 f4       	brne	.+14     	; 0x7b2 <vfprintf+0x4c>
 7a4:	93 fd       	sbrc	r25, 3
 7a6:	85 91       	lpm	r24, Z+
 7a8:	93 ff       	sbrs	r25, 3
 7aa:	81 91       	ld	r24, Z+
 7ac:	7f 01       	movw	r14, r30
 7ae:	85 32       	cpi	r24, 0x25	; 37
 7b0:	29 f4       	brne	.+10     	; 0x7bc <vfprintf+0x56>
 7b2:	b6 01       	movw	r22, r12
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 7ba:	e7 cf       	rjmp	.-50     	; 0x78a <vfprintf+0x24>
 7bc:	91 2c       	mov	r9, r1
 7be:	21 2c       	mov	r2, r1
 7c0:	31 2c       	mov	r3, r1
 7c2:	ff e1       	ldi	r31, 0x1F	; 31
 7c4:	f3 15       	cp	r31, r3
 7c6:	d8 f0       	brcs	.+54     	; 0x7fe <vfprintf+0x98>
 7c8:	8b 32       	cpi	r24, 0x2B	; 43
 7ca:	79 f0       	breq	.+30     	; 0x7ea <vfprintf+0x84>
 7cc:	38 f4       	brcc	.+14     	; 0x7dc <vfprintf+0x76>
 7ce:	80 32       	cpi	r24, 0x20	; 32
 7d0:	79 f0       	breq	.+30     	; 0x7f0 <vfprintf+0x8a>
 7d2:	83 32       	cpi	r24, 0x23	; 35
 7d4:	a1 f4       	brne	.+40     	; 0x7fe <vfprintf+0x98>
 7d6:	23 2d       	mov	r18, r3
 7d8:	20 61       	ori	r18, 0x10	; 16
 7da:	1d c0       	rjmp	.+58     	; 0x816 <vfprintf+0xb0>
 7dc:	8d 32       	cpi	r24, 0x2D	; 45
 7de:	61 f0       	breq	.+24     	; 0x7f8 <vfprintf+0x92>
 7e0:	80 33       	cpi	r24, 0x30	; 48
 7e2:	69 f4       	brne	.+26     	; 0x7fe <vfprintf+0x98>
 7e4:	23 2d       	mov	r18, r3
 7e6:	21 60       	ori	r18, 0x01	; 1
 7e8:	16 c0       	rjmp	.+44     	; 0x816 <vfprintf+0xb0>
 7ea:	83 2d       	mov	r24, r3
 7ec:	82 60       	ori	r24, 0x02	; 2
 7ee:	38 2e       	mov	r3, r24
 7f0:	e3 2d       	mov	r30, r3
 7f2:	e4 60       	ori	r30, 0x04	; 4
 7f4:	3e 2e       	mov	r3, r30
 7f6:	2a c0       	rjmp	.+84     	; 0x84c <vfprintf+0xe6>
 7f8:	f3 2d       	mov	r31, r3
 7fa:	f8 60       	ori	r31, 0x08	; 8
 7fc:	1d c0       	rjmp	.+58     	; 0x838 <vfprintf+0xd2>
 7fe:	37 fc       	sbrc	r3, 7
 800:	2d c0       	rjmp	.+90     	; 0x85c <vfprintf+0xf6>
 802:	20 ed       	ldi	r18, 0xD0	; 208
 804:	28 0f       	add	r18, r24
 806:	2a 30       	cpi	r18, 0x0A	; 10
 808:	40 f0       	brcs	.+16     	; 0x81a <vfprintf+0xb4>
 80a:	8e 32       	cpi	r24, 0x2E	; 46
 80c:	b9 f4       	brne	.+46     	; 0x83c <vfprintf+0xd6>
 80e:	36 fc       	sbrc	r3, 6
 810:	81 c1       	rjmp	.+770    	; 0xb14 <__stack+0x15>
 812:	23 2d       	mov	r18, r3
 814:	20 64       	ori	r18, 0x40	; 64
 816:	32 2e       	mov	r3, r18
 818:	19 c0       	rjmp	.+50     	; 0x84c <vfprintf+0xe6>
 81a:	36 fe       	sbrs	r3, 6
 81c:	06 c0       	rjmp	.+12     	; 0x82a <vfprintf+0xc4>
 81e:	8a e0       	ldi	r24, 0x0A	; 10
 820:	98 9e       	mul	r9, r24
 822:	20 0d       	add	r18, r0
 824:	11 24       	eor	r1, r1
 826:	92 2e       	mov	r9, r18
 828:	11 c0       	rjmp	.+34     	; 0x84c <vfprintf+0xe6>
 82a:	ea e0       	ldi	r30, 0x0A	; 10
 82c:	2e 9e       	mul	r2, r30
 82e:	20 0d       	add	r18, r0
 830:	11 24       	eor	r1, r1
 832:	22 2e       	mov	r2, r18
 834:	f3 2d       	mov	r31, r3
 836:	f0 62       	ori	r31, 0x20	; 32
 838:	3f 2e       	mov	r3, r31
 83a:	08 c0       	rjmp	.+16     	; 0x84c <vfprintf+0xe6>
 83c:	8c 36       	cpi	r24, 0x6C	; 108
 83e:	21 f4       	brne	.+8      	; 0x848 <vfprintf+0xe2>
 840:	83 2d       	mov	r24, r3
 842:	80 68       	ori	r24, 0x80	; 128
 844:	38 2e       	mov	r3, r24
 846:	02 c0       	rjmp	.+4      	; 0x84c <vfprintf+0xe6>
 848:	88 36       	cpi	r24, 0x68	; 104
 84a:	41 f4       	brne	.+16     	; 0x85c <vfprintf+0xf6>
 84c:	f7 01       	movw	r30, r14
 84e:	93 fd       	sbrc	r25, 3
 850:	85 91       	lpm	r24, Z+
 852:	93 ff       	sbrs	r25, 3
 854:	81 91       	ld	r24, Z+
 856:	7f 01       	movw	r14, r30
 858:	81 11       	cpse	r24, r1
 85a:	b3 cf       	rjmp	.-154    	; 0x7c2 <vfprintf+0x5c>
 85c:	98 2f       	mov	r25, r24
 85e:	9f 7d       	andi	r25, 0xDF	; 223
 860:	95 54       	subi	r25, 0x45	; 69
 862:	93 30       	cpi	r25, 0x03	; 3
 864:	28 f4       	brcc	.+10     	; 0x870 <vfprintf+0x10a>
 866:	0c 5f       	subi	r16, 0xFC	; 252
 868:	1f 4f       	sbci	r17, 0xFF	; 255
 86a:	9f e3       	ldi	r25, 0x3F	; 63
 86c:	99 83       	std	Y+1, r25	; 0x01
 86e:	0d c0       	rjmp	.+26     	; 0x88a <vfprintf+0x124>
 870:	83 36       	cpi	r24, 0x63	; 99
 872:	31 f0       	breq	.+12     	; 0x880 <vfprintf+0x11a>
 874:	83 37       	cpi	r24, 0x73	; 115
 876:	71 f0       	breq	.+28     	; 0x894 <vfprintf+0x12e>
 878:	83 35       	cpi	r24, 0x53	; 83
 87a:	09 f0       	breq	.+2      	; 0x87e <vfprintf+0x118>
 87c:	59 c0       	rjmp	.+178    	; 0x930 <vfprintf+0x1ca>
 87e:	21 c0       	rjmp	.+66     	; 0x8c2 <vfprintf+0x15c>
 880:	f8 01       	movw	r30, r16
 882:	80 81       	ld	r24, Z
 884:	89 83       	std	Y+1, r24	; 0x01
 886:	0e 5f       	subi	r16, 0xFE	; 254
 888:	1f 4f       	sbci	r17, 0xFF	; 255
 88a:	88 24       	eor	r8, r8
 88c:	83 94       	inc	r8
 88e:	91 2c       	mov	r9, r1
 890:	53 01       	movw	r10, r6
 892:	13 c0       	rjmp	.+38     	; 0x8ba <vfprintf+0x154>
 894:	28 01       	movw	r4, r16
 896:	f2 e0       	ldi	r31, 0x02	; 2
 898:	4f 0e       	add	r4, r31
 89a:	51 1c       	adc	r5, r1
 89c:	f8 01       	movw	r30, r16
 89e:	a0 80       	ld	r10, Z
 8a0:	b1 80       	ldd	r11, Z+1	; 0x01
 8a2:	36 fe       	sbrs	r3, 6
 8a4:	03 c0       	rjmp	.+6      	; 0x8ac <vfprintf+0x146>
 8a6:	69 2d       	mov	r22, r9
 8a8:	70 e0       	ldi	r23, 0x00	; 0
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <vfprintf+0x14a>
 8ac:	6f ef       	ldi	r22, 0xFF	; 255
 8ae:	7f ef       	ldi	r23, 0xFF	; 255
 8b0:	c5 01       	movw	r24, r10
 8b2:	0e 94 9f 05 	call	0xb3e	; 0xb3e <strnlen>
 8b6:	4c 01       	movw	r8, r24
 8b8:	82 01       	movw	r16, r4
 8ba:	f3 2d       	mov	r31, r3
 8bc:	ff 77       	andi	r31, 0x7F	; 127
 8be:	3f 2e       	mov	r3, r31
 8c0:	16 c0       	rjmp	.+44     	; 0x8ee <vfprintf+0x188>
 8c2:	28 01       	movw	r4, r16
 8c4:	22 e0       	ldi	r18, 0x02	; 2
 8c6:	42 0e       	add	r4, r18
 8c8:	51 1c       	adc	r5, r1
 8ca:	f8 01       	movw	r30, r16
 8cc:	a0 80       	ld	r10, Z
 8ce:	b1 80       	ldd	r11, Z+1	; 0x01
 8d0:	36 fe       	sbrs	r3, 6
 8d2:	03 c0       	rjmp	.+6      	; 0x8da <vfprintf+0x174>
 8d4:	69 2d       	mov	r22, r9
 8d6:	70 e0       	ldi	r23, 0x00	; 0
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <vfprintf+0x178>
 8da:	6f ef       	ldi	r22, 0xFF	; 255
 8dc:	7f ef       	ldi	r23, 0xFF	; 255
 8de:	c5 01       	movw	r24, r10
 8e0:	0e 94 94 05 	call	0xb28	; 0xb28 <strnlen_P>
 8e4:	4c 01       	movw	r8, r24
 8e6:	f3 2d       	mov	r31, r3
 8e8:	f0 68       	ori	r31, 0x80	; 128
 8ea:	3f 2e       	mov	r3, r31
 8ec:	82 01       	movw	r16, r4
 8ee:	33 fc       	sbrc	r3, 3
 8f0:	1b c0       	rjmp	.+54     	; 0x928 <vfprintf+0x1c2>
 8f2:	82 2d       	mov	r24, r2
 8f4:	90 e0       	ldi	r25, 0x00	; 0
 8f6:	88 16       	cp	r8, r24
 8f8:	99 06       	cpc	r9, r25
 8fa:	b0 f4       	brcc	.+44     	; 0x928 <vfprintf+0x1c2>
 8fc:	b6 01       	movw	r22, r12
 8fe:	80 e2       	ldi	r24, 0x20	; 32
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 906:	2a 94       	dec	r2
 908:	f4 cf       	rjmp	.-24     	; 0x8f2 <vfprintf+0x18c>
 90a:	f5 01       	movw	r30, r10
 90c:	37 fc       	sbrc	r3, 7
 90e:	85 91       	lpm	r24, Z+
 910:	37 fe       	sbrs	r3, 7
 912:	81 91       	ld	r24, Z+
 914:	5f 01       	movw	r10, r30
 916:	b6 01       	movw	r22, r12
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 91e:	21 10       	cpse	r2, r1
 920:	2a 94       	dec	r2
 922:	21 e0       	ldi	r18, 0x01	; 1
 924:	82 1a       	sub	r8, r18
 926:	91 08       	sbc	r9, r1
 928:	81 14       	cp	r8, r1
 92a:	91 04       	cpc	r9, r1
 92c:	71 f7       	brne	.-36     	; 0x90a <vfprintf+0x1a4>
 92e:	e8 c0       	rjmp	.+464    	; 0xb00 <__stack+0x1>
 930:	84 36       	cpi	r24, 0x64	; 100
 932:	11 f0       	breq	.+4      	; 0x938 <vfprintf+0x1d2>
 934:	89 36       	cpi	r24, 0x69	; 105
 936:	41 f5       	brne	.+80     	; 0x988 <vfprintf+0x222>
 938:	f8 01       	movw	r30, r16
 93a:	37 fe       	sbrs	r3, 7
 93c:	07 c0       	rjmp	.+14     	; 0x94c <vfprintf+0x1e6>
 93e:	60 81       	ld	r22, Z
 940:	71 81       	ldd	r23, Z+1	; 0x01
 942:	82 81       	ldd	r24, Z+2	; 0x02
 944:	93 81       	ldd	r25, Z+3	; 0x03
 946:	0c 5f       	subi	r16, 0xFC	; 252
 948:	1f 4f       	sbci	r17, 0xFF	; 255
 94a:	08 c0       	rjmp	.+16     	; 0x95c <vfprintf+0x1f6>
 94c:	60 81       	ld	r22, Z
 94e:	71 81       	ldd	r23, Z+1	; 0x01
 950:	07 2e       	mov	r0, r23
 952:	00 0c       	add	r0, r0
 954:	88 0b       	sbc	r24, r24
 956:	99 0b       	sbc	r25, r25
 958:	0e 5f       	subi	r16, 0xFE	; 254
 95a:	1f 4f       	sbci	r17, 0xFF	; 255
 95c:	f3 2d       	mov	r31, r3
 95e:	ff 76       	andi	r31, 0x6F	; 111
 960:	3f 2e       	mov	r3, r31
 962:	97 ff       	sbrs	r25, 7
 964:	09 c0       	rjmp	.+18     	; 0x978 <vfprintf+0x212>
 966:	90 95       	com	r25
 968:	80 95       	com	r24
 96a:	70 95       	com	r23
 96c:	61 95       	neg	r22
 96e:	7f 4f       	sbci	r23, 0xFF	; 255
 970:	8f 4f       	sbci	r24, 0xFF	; 255
 972:	9f 4f       	sbci	r25, 0xFF	; 255
 974:	f0 68       	ori	r31, 0x80	; 128
 976:	3f 2e       	mov	r3, r31
 978:	2a e0       	ldi	r18, 0x0A	; 10
 97a:	30 e0       	ldi	r19, 0x00	; 0
 97c:	a3 01       	movw	r20, r6
 97e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__ultoa_invert>
 982:	88 2e       	mov	r8, r24
 984:	86 18       	sub	r8, r6
 986:	45 c0       	rjmp	.+138    	; 0xa12 <vfprintf+0x2ac>
 988:	85 37       	cpi	r24, 0x75	; 117
 98a:	31 f4       	brne	.+12     	; 0x998 <vfprintf+0x232>
 98c:	23 2d       	mov	r18, r3
 98e:	2f 7e       	andi	r18, 0xEF	; 239
 990:	b2 2e       	mov	r11, r18
 992:	2a e0       	ldi	r18, 0x0A	; 10
 994:	30 e0       	ldi	r19, 0x00	; 0
 996:	25 c0       	rjmp	.+74     	; 0x9e2 <vfprintf+0x27c>
 998:	93 2d       	mov	r25, r3
 99a:	99 7f       	andi	r25, 0xF9	; 249
 99c:	b9 2e       	mov	r11, r25
 99e:	8f 36       	cpi	r24, 0x6F	; 111
 9a0:	c1 f0       	breq	.+48     	; 0x9d2 <vfprintf+0x26c>
 9a2:	18 f4       	brcc	.+6      	; 0x9aa <vfprintf+0x244>
 9a4:	88 35       	cpi	r24, 0x58	; 88
 9a6:	79 f0       	breq	.+30     	; 0x9c6 <vfprintf+0x260>
 9a8:	b5 c0       	rjmp	.+362    	; 0xb14 <__stack+0x15>
 9aa:	80 37       	cpi	r24, 0x70	; 112
 9ac:	19 f0       	breq	.+6      	; 0x9b4 <vfprintf+0x24e>
 9ae:	88 37       	cpi	r24, 0x78	; 120
 9b0:	21 f0       	breq	.+8      	; 0x9ba <vfprintf+0x254>
 9b2:	b0 c0       	rjmp	.+352    	; 0xb14 <__stack+0x15>
 9b4:	e9 2f       	mov	r30, r25
 9b6:	e0 61       	ori	r30, 0x10	; 16
 9b8:	be 2e       	mov	r11, r30
 9ba:	b4 fe       	sbrs	r11, 4
 9bc:	0d c0       	rjmp	.+26     	; 0x9d8 <vfprintf+0x272>
 9be:	fb 2d       	mov	r31, r11
 9c0:	f4 60       	ori	r31, 0x04	; 4
 9c2:	bf 2e       	mov	r11, r31
 9c4:	09 c0       	rjmp	.+18     	; 0x9d8 <vfprintf+0x272>
 9c6:	34 fe       	sbrs	r3, 4
 9c8:	0a c0       	rjmp	.+20     	; 0x9de <vfprintf+0x278>
 9ca:	29 2f       	mov	r18, r25
 9cc:	26 60       	ori	r18, 0x06	; 6
 9ce:	b2 2e       	mov	r11, r18
 9d0:	06 c0       	rjmp	.+12     	; 0x9de <vfprintf+0x278>
 9d2:	28 e0       	ldi	r18, 0x08	; 8
 9d4:	30 e0       	ldi	r19, 0x00	; 0
 9d6:	05 c0       	rjmp	.+10     	; 0x9e2 <vfprintf+0x27c>
 9d8:	20 e1       	ldi	r18, 0x10	; 16
 9da:	30 e0       	ldi	r19, 0x00	; 0
 9dc:	02 c0       	rjmp	.+4      	; 0x9e2 <vfprintf+0x27c>
 9de:	20 e1       	ldi	r18, 0x10	; 16
 9e0:	32 e0       	ldi	r19, 0x02	; 2
 9e2:	f8 01       	movw	r30, r16
 9e4:	b7 fe       	sbrs	r11, 7
 9e6:	07 c0       	rjmp	.+14     	; 0x9f6 <vfprintf+0x290>
 9e8:	60 81       	ld	r22, Z
 9ea:	71 81       	ldd	r23, Z+1	; 0x01
 9ec:	82 81       	ldd	r24, Z+2	; 0x02
 9ee:	93 81       	ldd	r25, Z+3	; 0x03
 9f0:	0c 5f       	subi	r16, 0xFC	; 252
 9f2:	1f 4f       	sbci	r17, 0xFF	; 255
 9f4:	06 c0       	rjmp	.+12     	; 0xa02 <vfprintf+0x29c>
 9f6:	60 81       	ld	r22, Z
 9f8:	71 81       	ldd	r23, Z+1	; 0x01
 9fa:	80 e0       	ldi	r24, 0x00	; 0
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	0e 5f       	subi	r16, 0xFE	; 254
 a00:	1f 4f       	sbci	r17, 0xFF	; 255
 a02:	a3 01       	movw	r20, r6
 a04:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__ultoa_invert>
 a08:	88 2e       	mov	r8, r24
 a0a:	86 18       	sub	r8, r6
 a0c:	fb 2d       	mov	r31, r11
 a0e:	ff 77       	andi	r31, 0x7F	; 127
 a10:	3f 2e       	mov	r3, r31
 a12:	36 fe       	sbrs	r3, 6
 a14:	0d c0       	rjmp	.+26     	; 0xa30 <vfprintf+0x2ca>
 a16:	23 2d       	mov	r18, r3
 a18:	2e 7f       	andi	r18, 0xFE	; 254
 a1a:	a2 2e       	mov	r10, r18
 a1c:	89 14       	cp	r8, r9
 a1e:	58 f4       	brcc	.+22     	; 0xa36 <vfprintf+0x2d0>
 a20:	34 fe       	sbrs	r3, 4
 a22:	0b c0       	rjmp	.+22     	; 0xa3a <vfprintf+0x2d4>
 a24:	32 fc       	sbrc	r3, 2
 a26:	09 c0       	rjmp	.+18     	; 0xa3a <vfprintf+0x2d4>
 a28:	83 2d       	mov	r24, r3
 a2a:	8e 7e       	andi	r24, 0xEE	; 238
 a2c:	a8 2e       	mov	r10, r24
 a2e:	05 c0       	rjmp	.+10     	; 0xa3a <vfprintf+0x2d4>
 a30:	b8 2c       	mov	r11, r8
 a32:	a3 2c       	mov	r10, r3
 a34:	03 c0       	rjmp	.+6      	; 0xa3c <vfprintf+0x2d6>
 a36:	b8 2c       	mov	r11, r8
 a38:	01 c0       	rjmp	.+2      	; 0xa3c <vfprintf+0x2d6>
 a3a:	b9 2c       	mov	r11, r9
 a3c:	a4 fe       	sbrs	r10, 4
 a3e:	0f c0       	rjmp	.+30     	; 0xa5e <vfprintf+0x2f8>
 a40:	fe 01       	movw	r30, r28
 a42:	e8 0d       	add	r30, r8
 a44:	f1 1d       	adc	r31, r1
 a46:	80 81       	ld	r24, Z
 a48:	80 33       	cpi	r24, 0x30	; 48
 a4a:	21 f4       	brne	.+8      	; 0xa54 <vfprintf+0x2ee>
 a4c:	9a 2d       	mov	r25, r10
 a4e:	99 7e       	andi	r25, 0xE9	; 233
 a50:	a9 2e       	mov	r10, r25
 a52:	09 c0       	rjmp	.+18     	; 0xa66 <vfprintf+0x300>
 a54:	a2 fe       	sbrs	r10, 2
 a56:	06 c0       	rjmp	.+12     	; 0xa64 <vfprintf+0x2fe>
 a58:	b3 94       	inc	r11
 a5a:	b3 94       	inc	r11
 a5c:	04 c0       	rjmp	.+8      	; 0xa66 <vfprintf+0x300>
 a5e:	8a 2d       	mov	r24, r10
 a60:	86 78       	andi	r24, 0x86	; 134
 a62:	09 f0       	breq	.+2      	; 0xa66 <vfprintf+0x300>
 a64:	b3 94       	inc	r11
 a66:	a3 fc       	sbrc	r10, 3
 a68:	11 c0       	rjmp	.+34     	; 0xa8c <vfprintf+0x326>
 a6a:	a0 fe       	sbrs	r10, 0
 a6c:	06 c0       	rjmp	.+12     	; 0xa7a <vfprintf+0x314>
 a6e:	b2 14       	cp	r11, r2
 a70:	88 f4       	brcc	.+34     	; 0xa94 <vfprintf+0x32e>
 a72:	28 0c       	add	r2, r8
 a74:	92 2c       	mov	r9, r2
 a76:	9b 18       	sub	r9, r11
 a78:	0e c0       	rjmp	.+28     	; 0xa96 <vfprintf+0x330>
 a7a:	b2 14       	cp	r11, r2
 a7c:	60 f4       	brcc	.+24     	; 0xa96 <vfprintf+0x330>
 a7e:	b6 01       	movw	r22, r12
 a80:	80 e2       	ldi	r24, 0x20	; 32
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 a88:	b3 94       	inc	r11
 a8a:	f7 cf       	rjmp	.-18     	; 0xa7a <vfprintf+0x314>
 a8c:	b2 14       	cp	r11, r2
 a8e:	18 f4       	brcc	.+6      	; 0xa96 <vfprintf+0x330>
 a90:	2b 18       	sub	r2, r11
 a92:	02 c0       	rjmp	.+4      	; 0xa98 <vfprintf+0x332>
 a94:	98 2c       	mov	r9, r8
 a96:	21 2c       	mov	r2, r1
 a98:	a4 fe       	sbrs	r10, 4
 a9a:	10 c0       	rjmp	.+32     	; 0xabc <vfprintf+0x356>
 a9c:	b6 01       	movw	r22, r12
 a9e:	80 e3       	ldi	r24, 0x30	; 48
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 aa6:	a2 fe       	sbrs	r10, 2
 aa8:	17 c0       	rjmp	.+46     	; 0xad8 <vfprintf+0x372>
 aaa:	a1 fc       	sbrc	r10, 1
 aac:	03 c0       	rjmp	.+6      	; 0xab4 <vfprintf+0x34e>
 aae:	88 e7       	ldi	r24, 0x78	; 120
 ab0:	90 e0       	ldi	r25, 0x00	; 0
 ab2:	02 c0       	rjmp	.+4      	; 0xab8 <vfprintf+0x352>
 ab4:	88 e5       	ldi	r24, 0x58	; 88
 ab6:	90 e0       	ldi	r25, 0x00	; 0
 ab8:	b6 01       	movw	r22, r12
 aba:	0c c0       	rjmp	.+24     	; 0xad4 <vfprintf+0x36e>
 abc:	8a 2d       	mov	r24, r10
 abe:	86 78       	andi	r24, 0x86	; 134
 ac0:	59 f0       	breq	.+22     	; 0xad8 <vfprintf+0x372>
 ac2:	a1 fe       	sbrs	r10, 1
 ac4:	02 c0       	rjmp	.+4      	; 0xaca <vfprintf+0x364>
 ac6:	8b e2       	ldi	r24, 0x2B	; 43
 ac8:	01 c0       	rjmp	.+2      	; 0xacc <vfprintf+0x366>
 aca:	80 e2       	ldi	r24, 0x20	; 32
 acc:	a7 fc       	sbrc	r10, 7
 ace:	8d e2       	ldi	r24, 0x2D	; 45
 ad0:	b6 01       	movw	r22, r12
 ad2:	90 e0       	ldi	r25, 0x00	; 0
 ad4:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 ad8:	89 14       	cp	r8, r9
 ada:	38 f4       	brcc	.+14     	; 0xaea <vfprintf+0x384>
 adc:	b6 01       	movw	r22, r12
 ade:	80 e3       	ldi	r24, 0x30	; 48
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 ae6:	9a 94       	dec	r9
 ae8:	f7 cf       	rjmp	.-18     	; 0xad8 <vfprintf+0x372>
 aea:	8a 94       	dec	r8
 aec:	f3 01       	movw	r30, r6
 aee:	e8 0d       	add	r30, r8
 af0:	f1 1d       	adc	r31, r1
 af2:	80 81       	ld	r24, Z
 af4:	b6 01       	movw	r22, r12
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 afc:	81 10       	cpse	r8, r1
 afe:	f5 cf       	rjmp	.-22     	; 0xaea <vfprintf+0x384>
 b00:	22 20       	and	r2, r2
 b02:	09 f4       	brne	.+2      	; 0xb06 <__stack+0x7>
 b04:	42 ce       	rjmp	.-892    	; 0x78a <vfprintf+0x24>
 b06:	b6 01       	movw	r22, r12
 b08:	80 e2       	ldi	r24, 0x20	; 32
 b0a:	90 e0       	ldi	r25, 0x00	; 0
 b0c:	0e 94 aa 05 	call	0xb54	; 0xb54 <fputc>
 b10:	2a 94       	dec	r2
 b12:	f6 cf       	rjmp	.-20     	; 0xb00 <__stack+0x1>
 b14:	f6 01       	movw	r30, r12
 b16:	86 81       	ldd	r24, Z+6	; 0x06
 b18:	97 81       	ldd	r25, Z+7	; 0x07
 b1a:	02 c0       	rjmp	.+4      	; 0xb20 <__stack+0x21>
 b1c:	8f ef       	ldi	r24, 0xFF	; 255
 b1e:	9f ef       	ldi	r25, 0xFF	; 255
 b20:	2b 96       	adiw	r28, 0x0b	; 11
 b22:	e2 e1       	ldi	r30, 0x12	; 18
 b24:	0c 94 73 06 	jmp	0xce6	; 0xce6 <__epilogue_restores__>

00000b28 <strnlen_P>:
 b28:	fc 01       	movw	r30, r24
 b2a:	05 90       	lpm	r0, Z+
 b2c:	61 50       	subi	r22, 0x01	; 1
 b2e:	70 40       	sbci	r23, 0x00	; 0
 b30:	01 10       	cpse	r0, r1
 b32:	d8 f7       	brcc	.-10     	; 0xb2a <strnlen_P+0x2>
 b34:	80 95       	com	r24
 b36:	90 95       	com	r25
 b38:	8e 0f       	add	r24, r30
 b3a:	9f 1f       	adc	r25, r31
 b3c:	08 95       	ret

00000b3e <strnlen>:
 b3e:	fc 01       	movw	r30, r24
 b40:	61 50       	subi	r22, 0x01	; 1
 b42:	70 40       	sbci	r23, 0x00	; 0
 b44:	01 90       	ld	r0, Z+
 b46:	01 10       	cpse	r0, r1
 b48:	d8 f7       	brcc	.-10     	; 0xb40 <strnlen+0x2>
 b4a:	80 95       	com	r24
 b4c:	90 95       	com	r25
 b4e:	8e 0f       	add	r24, r30
 b50:	9f 1f       	adc	r25, r31
 b52:	08 95       	ret

00000b54 <fputc>:
 b54:	0f 93       	push	r16
 b56:	1f 93       	push	r17
 b58:	cf 93       	push	r28
 b5a:	df 93       	push	r29
 b5c:	fb 01       	movw	r30, r22
 b5e:	23 81       	ldd	r18, Z+3	; 0x03
 b60:	21 fd       	sbrc	r18, 1
 b62:	03 c0       	rjmp	.+6      	; 0xb6a <fputc+0x16>
 b64:	8f ef       	ldi	r24, 0xFF	; 255
 b66:	9f ef       	ldi	r25, 0xFF	; 255
 b68:	2c c0       	rjmp	.+88     	; 0xbc2 <fputc+0x6e>
 b6a:	22 ff       	sbrs	r18, 2
 b6c:	16 c0       	rjmp	.+44     	; 0xb9a <fputc+0x46>
 b6e:	46 81       	ldd	r20, Z+6	; 0x06
 b70:	57 81       	ldd	r21, Z+7	; 0x07
 b72:	24 81       	ldd	r18, Z+4	; 0x04
 b74:	35 81       	ldd	r19, Z+5	; 0x05
 b76:	42 17       	cp	r20, r18
 b78:	53 07       	cpc	r21, r19
 b7a:	44 f4       	brge	.+16     	; 0xb8c <fputc+0x38>
 b7c:	a0 81       	ld	r26, Z
 b7e:	b1 81       	ldd	r27, Z+1	; 0x01
 b80:	9d 01       	movw	r18, r26
 b82:	2f 5f       	subi	r18, 0xFF	; 255
 b84:	3f 4f       	sbci	r19, 0xFF	; 255
 b86:	31 83       	std	Z+1, r19	; 0x01
 b88:	20 83       	st	Z, r18
 b8a:	8c 93       	st	X, r24
 b8c:	26 81       	ldd	r18, Z+6	; 0x06
 b8e:	37 81       	ldd	r19, Z+7	; 0x07
 b90:	2f 5f       	subi	r18, 0xFF	; 255
 b92:	3f 4f       	sbci	r19, 0xFF	; 255
 b94:	37 83       	std	Z+7, r19	; 0x07
 b96:	26 83       	std	Z+6, r18	; 0x06
 b98:	14 c0       	rjmp	.+40     	; 0xbc2 <fputc+0x6e>
 b9a:	8b 01       	movw	r16, r22
 b9c:	ec 01       	movw	r28, r24
 b9e:	fb 01       	movw	r30, r22
 ba0:	00 84       	ldd	r0, Z+8	; 0x08
 ba2:	f1 85       	ldd	r31, Z+9	; 0x09
 ba4:	e0 2d       	mov	r30, r0
 ba6:	09 95       	icall
 ba8:	89 2b       	or	r24, r25
 baa:	e1 f6       	brne	.-72     	; 0xb64 <fputc+0x10>
 bac:	d8 01       	movw	r26, r16
 bae:	16 96       	adiw	r26, 0x06	; 6
 bb0:	8d 91       	ld	r24, X+
 bb2:	9c 91       	ld	r25, X
 bb4:	17 97       	sbiw	r26, 0x07	; 7
 bb6:	01 96       	adiw	r24, 0x01	; 1
 bb8:	17 96       	adiw	r26, 0x07	; 7
 bba:	9c 93       	st	X, r25
 bbc:	8e 93       	st	-X, r24
 bbe:	16 97       	sbiw	r26, 0x06	; 6
 bc0:	ce 01       	movw	r24, r28
 bc2:	df 91       	pop	r29
 bc4:	cf 91       	pop	r28
 bc6:	1f 91       	pop	r17
 bc8:	0f 91       	pop	r16
 bca:	08 95       	ret

00000bcc <__ultoa_invert>:
 bcc:	fa 01       	movw	r30, r20
 bce:	aa 27       	eor	r26, r26
 bd0:	28 30       	cpi	r18, 0x08	; 8
 bd2:	51 f1       	breq	.+84     	; 0xc28 <__ultoa_invert+0x5c>
 bd4:	20 31       	cpi	r18, 0x10	; 16
 bd6:	81 f1       	breq	.+96     	; 0xc38 <__ultoa_invert+0x6c>
 bd8:	e8 94       	clt
 bda:	6f 93       	push	r22
 bdc:	6e 7f       	andi	r22, 0xFE	; 254
 bde:	6e 5f       	subi	r22, 0xFE	; 254
 be0:	7f 4f       	sbci	r23, 0xFF	; 255
 be2:	8f 4f       	sbci	r24, 0xFF	; 255
 be4:	9f 4f       	sbci	r25, 0xFF	; 255
 be6:	af 4f       	sbci	r26, 0xFF	; 255
 be8:	b1 e0       	ldi	r27, 0x01	; 1
 bea:	3e d0       	rcall	.+124    	; 0xc68 <__ultoa_invert+0x9c>
 bec:	b4 e0       	ldi	r27, 0x04	; 4
 bee:	3c d0       	rcall	.+120    	; 0xc68 <__ultoa_invert+0x9c>
 bf0:	67 0f       	add	r22, r23
 bf2:	78 1f       	adc	r23, r24
 bf4:	89 1f       	adc	r24, r25
 bf6:	9a 1f       	adc	r25, r26
 bf8:	a1 1d       	adc	r26, r1
 bfa:	68 0f       	add	r22, r24
 bfc:	79 1f       	adc	r23, r25
 bfe:	8a 1f       	adc	r24, r26
 c00:	91 1d       	adc	r25, r1
 c02:	a1 1d       	adc	r26, r1
 c04:	6a 0f       	add	r22, r26
 c06:	71 1d       	adc	r23, r1
 c08:	81 1d       	adc	r24, r1
 c0a:	91 1d       	adc	r25, r1
 c0c:	a1 1d       	adc	r26, r1
 c0e:	20 d0       	rcall	.+64     	; 0xc50 <__ultoa_invert+0x84>
 c10:	09 f4       	brne	.+2      	; 0xc14 <__ultoa_invert+0x48>
 c12:	68 94       	set
 c14:	3f 91       	pop	r19
 c16:	2a e0       	ldi	r18, 0x0A	; 10
 c18:	26 9f       	mul	r18, r22
 c1a:	11 24       	eor	r1, r1
 c1c:	30 19       	sub	r19, r0
 c1e:	30 5d       	subi	r19, 0xD0	; 208
 c20:	31 93       	st	Z+, r19
 c22:	de f6       	brtc	.-74     	; 0xbda <__ultoa_invert+0xe>
 c24:	cf 01       	movw	r24, r30
 c26:	08 95       	ret
 c28:	46 2f       	mov	r20, r22
 c2a:	47 70       	andi	r20, 0x07	; 7
 c2c:	40 5d       	subi	r20, 0xD0	; 208
 c2e:	41 93       	st	Z+, r20
 c30:	b3 e0       	ldi	r27, 0x03	; 3
 c32:	0f d0       	rcall	.+30     	; 0xc52 <__ultoa_invert+0x86>
 c34:	c9 f7       	brne	.-14     	; 0xc28 <__ultoa_invert+0x5c>
 c36:	f6 cf       	rjmp	.-20     	; 0xc24 <__ultoa_invert+0x58>
 c38:	46 2f       	mov	r20, r22
 c3a:	4f 70       	andi	r20, 0x0F	; 15
 c3c:	40 5d       	subi	r20, 0xD0	; 208
 c3e:	4a 33       	cpi	r20, 0x3A	; 58
 c40:	18 f0       	brcs	.+6      	; 0xc48 <__ultoa_invert+0x7c>
 c42:	49 5d       	subi	r20, 0xD9	; 217
 c44:	31 fd       	sbrc	r19, 1
 c46:	40 52       	subi	r20, 0x20	; 32
 c48:	41 93       	st	Z+, r20
 c4a:	02 d0       	rcall	.+4      	; 0xc50 <__ultoa_invert+0x84>
 c4c:	a9 f7       	brne	.-22     	; 0xc38 <__ultoa_invert+0x6c>
 c4e:	ea cf       	rjmp	.-44     	; 0xc24 <__ultoa_invert+0x58>
 c50:	b4 e0       	ldi	r27, 0x04	; 4
 c52:	a6 95       	lsr	r26
 c54:	97 95       	ror	r25
 c56:	87 95       	ror	r24
 c58:	77 95       	ror	r23
 c5a:	67 95       	ror	r22
 c5c:	ba 95       	dec	r27
 c5e:	c9 f7       	brne	.-14     	; 0xc52 <__ultoa_invert+0x86>
 c60:	00 97       	sbiw	r24, 0x00	; 0
 c62:	61 05       	cpc	r22, r1
 c64:	71 05       	cpc	r23, r1
 c66:	08 95       	ret
 c68:	9b 01       	movw	r18, r22
 c6a:	ac 01       	movw	r20, r24
 c6c:	0a 2e       	mov	r0, r26
 c6e:	06 94       	lsr	r0
 c70:	57 95       	ror	r21
 c72:	47 95       	ror	r20
 c74:	37 95       	ror	r19
 c76:	27 95       	ror	r18
 c78:	ba 95       	dec	r27
 c7a:	c9 f7       	brne	.-14     	; 0xc6e <__ultoa_invert+0xa2>
 c7c:	62 0f       	add	r22, r18
 c7e:	73 1f       	adc	r23, r19
 c80:	84 1f       	adc	r24, r20
 c82:	95 1f       	adc	r25, r21
 c84:	a0 1d       	adc	r26, r0
 c86:	08 95       	ret

00000c88 <__muluhisi3>:
 c88:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__umulhisi3>
 c8c:	a5 9f       	mul	r26, r21
 c8e:	90 0d       	add	r25, r0
 c90:	b4 9f       	mul	r27, r20
 c92:	90 0d       	add	r25, r0
 c94:	a4 9f       	mul	r26, r20
 c96:	80 0d       	add	r24, r0
 c98:	91 1d       	adc	r25, r1
 c9a:	11 24       	eor	r1, r1
 c9c:	08 95       	ret

00000c9e <__mulshisi3>:
 c9e:	b7 ff       	sbrs	r27, 7
 ca0:	0c 94 44 06 	jmp	0xc88	; 0xc88 <__muluhisi3>

00000ca4 <__mulohisi3>:
 ca4:	0e 94 44 06 	call	0xc88	; 0xc88 <__muluhisi3>
 ca8:	82 1b       	sub	r24, r18
 caa:	93 0b       	sbc	r25, r19
 cac:	08 95       	ret

00000cae <__prologue_saves__>:
 cae:	2f 92       	push	r2
 cb0:	3f 92       	push	r3
 cb2:	4f 92       	push	r4
 cb4:	5f 92       	push	r5
 cb6:	6f 92       	push	r6
 cb8:	7f 92       	push	r7
 cba:	8f 92       	push	r8
 cbc:	9f 92       	push	r9
 cbe:	af 92       	push	r10
 cc0:	bf 92       	push	r11
 cc2:	cf 92       	push	r12
 cc4:	df 92       	push	r13
 cc6:	ef 92       	push	r14
 cc8:	ff 92       	push	r15
 cca:	0f 93       	push	r16
 ccc:	1f 93       	push	r17
 cce:	cf 93       	push	r28
 cd0:	df 93       	push	r29
 cd2:	cd b7       	in	r28, 0x3d	; 61
 cd4:	de b7       	in	r29, 0x3e	; 62
 cd6:	ca 1b       	sub	r28, r26
 cd8:	db 0b       	sbc	r29, r27
 cda:	0f b6       	in	r0, 0x3f	; 63
 cdc:	f8 94       	cli
 cde:	de bf       	out	0x3e, r29	; 62
 ce0:	0f be       	out	0x3f, r0	; 63
 ce2:	cd bf       	out	0x3d, r28	; 61
 ce4:	09 94       	ijmp

00000ce6 <__epilogue_restores__>:
 ce6:	2a 88       	ldd	r2, Y+18	; 0x12
 ce8:	39 88       	ldd	r3, Y+17	; 0x11
 cea:	48 88       	ldd	r4, Y+16	; 0x10
 cec:	5f 84       	ldd	r5, Y+15	; 0x0f
 cee:	6e 84       	ldd	r6, Y+14	; 0x0e
 cf0:	7d 84       	ldd	r7, Y+13	; 0x0d
 cf2:	8c 84       	ldd	r8, Y+12	; 0x0c
 cf4:	9b 84       	ldd	r9, Y+11	; 0x0b
 cf6:	aa 84       	ldd	r10, Y+10	; 0x0a
 cf8:	b9 84       	ldd	r11, Y+9	; 0x09
 cfa:	c8 84       	ldd	r12, Y+8	; 0x08
 cfc:	df 80       	ldd	r13, Y+7	; 0x07
 cfe:	ee 80       	ldd	r14, Y+6	; 0x06
 d00:	fd 80       	ldd	r15, Y+5	; 0x05
 d02:	0c 81       	ldd	r16, Y+4	; 0x04
 d04:	1b 81       	ldd	r17, Y+3	; 0x03
 d06:	aa 81       	ldd	r26, Y+2	; 0x02
 d08:	b9 81       	ldd	r27, Y+1	; 0x01
 d0a:	ce 0f       	add	r28, r30
 d0c:	d1 1d       	adc	r29, r1
 d0e:	0f b6       	in	r0, 0x3f	; 63
 d10:	f8 94       	cli
 d12:	de bf       	out	0x3e, r29	; 62
 d14:	0f be       	out	0x3f, r0	; 63
 d16:	cd bf       	out	0x3d, r28	; 61
 d18:	ed 01       	movw	r28, r26
 d1a:	08 95       	ret

00000d1c <__umulhisi3>:
 d1c:	a2 9f       	mul	r26, r18
 d1e:	b0 01       	movw	r22, r0
 d20:	b3 9f       	mul	r27, r19
 d22:	c0 01       	movw	r24, r0
 d24:	a3 9f       	mul	r26, r19
 d26:	70 0d       	add	r23, r0
 d28:	81 1d       	adc	r24, r1
 d2a:	11 24       	eor	r1, r1
 d2c:	91 1d       	adc	r25, r1
 d2e:	b2 9f       	mul	r27, r18
 d30:	70 0d       	add	r23, r0
 d32:	81 1d       	adc	r24, r1
 d34:	11 24       	eor	r1, r1
 d36:	91 1d       	adc	r25, r1
 d38:	08 95       	ret

00000d3a <_exit>:
 d3a:	f8 94       	cli

00000d3c <__stop_program>:
 d3c:	ff cf       	rjmp	.-2      	; 0xd3c <__stop_program>
